// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique @db.VarChar(100)
  passwordHash String   @map("password_hash") @db.VarChar(255)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  memos Memo[]

  @@map("users")
}

model Memo {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid(7))
  title     String   @db.VarChar(255)
  content   String?  @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  linkedFrom MemoLink[] @relation("SourceMemo")
  linkedTo   MemoLink[] @relation("TargetMemo")

  @@map("memos")
}

model MemoLink {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")

  sourceId Int @map("source_id")
  targetId Int @map("target_id")

  source Memo @relation("SourceMemo", fields: [sourceId], references: [id], onDelete: Cascade)
  target Memo @relation("TargetMemo", fields: [targetId], references: [id], onDelete: Cascade)

  @@unique([sourceId, targetId])
  @@map("memo_links")
}
